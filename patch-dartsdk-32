#!/bin/bash

type curl >/dev/null 2>&1 || { echo >&2 "Package curl not installed. Run 'apt-get install curl' and try again. Aborting."; exit 1; }

DART_BUILD="latest"
DART_SDK_URL="http://commondatastorage.googleapis.com/dart-editor-archive-integration/$DART_BUILD/dartsdk-linux-32.tar.gz"

CDIR=$(pwd)
WDIR=$(mktemp -d /tmp/patch-dartsdk-linux.XXXXXXXX)
DART_SDK_BIN=$WDIR/dart-sdk/bin
DART_SDK_LIB=$DART_SDK_BIN/lib

URLS="\
http://archive.ubuntu.com/ubuntu/pool/main/e/eglibc/libc6_2.15-0ubuntu20.1_i386.deb \
http://archive.ubuntu.com/ubuntu/pool/main/g/gcc-4.6/libgcc1_4.6.3-1ubuntu5_i386.deb \
http://archive.ubuntu.com/ubuntu/pool/main/g/gcc-4.6/libstdc++6_4.6.3-1ubuntu5_i386.deb \
"

LIBS="\
lib/i386-linux-gnu/ld-2.15.so \
lib/i386-linux-gnu/ld-linux.so.2 \
lib/i386-linux-gnu/libc-2.15.so \
lib/i386-linux-gnu/libc.so.6 \
lib/i386-linux-gnu/libdl-2.15.so \
lib/i386-linux-gnu/libdl.so.2 \
lib/i386-linux-gnu/libgcc_s.so.1 \
lib/i386-linux-gnu/libm-2.15.so \
lib/i386-linux-gnu/libm.so.6 \
lib/i386-linux-gnu/libpthread-2.15.so \
lib/i386-linux-gnu/libpthread.so.0 \
lib/i386-linux-gnu/librt-2.15.so \
lib/i386-linux-gnu/librt.so.1 \
usr/lib/i386-linux-gnu/libstdc++.so.6 \
usr/lib/i386-linux-gnu/libstdc++.so.6.0.16 \
"

cd $WDIR

# Download and extract Dart SDK
echo "Downloading $DART_SDK_URL"
curl -s -O -L $DART_SDK_URL
echo "Extracting $(basename $DART_SDK_URL)"
tar zxf $(basename $DART_SDK_URL)
mkdir -p $DART_SDK_LIB
echo

# Download and extract Ubuntu packages
for url in $URLS ; do
  echo "Downloading $url"
  curl -s -L -O $url
  echo "Extracting $(basename $url) to $WDIR"
  ar p $(basename $url) data.tar.gz | tar zx
  echo
done

# Copy library from Ubuntu packages to Dart SDK
for lib in $LIBS ; do
  echo "Copying $lib"
  cp -a $lib $DART_SDK_LIB
  chmod +x $DART_SDK_LIB/$(basename $lib)
done

# Replace dart executable
echo "Patching Dart SDK"
mv $DART_SDK_BIN/dart $DART_SDK_BIN/dart.bin
cat << EOF > $DART_SDK_BIN/dart
#!/bin/bash
PWD=\$(dirname \$0)
\$PWD/lib/ld-linux.so.2 --library-path \$PWD/lib \$PWD/dart.bin \$* &
PID="\$!"
trap "kill \$PID" SIGTERM SIGINT
wait %1
exit \$?
EOF
chmod +x $DART_SDK_BIN/dart
echo

# Tarball patched SDK
echo "Tarball patched SDK"
rm -f $(basename $DART_SDK_URL)
tar czf $CDIR/$(basename $DART_SDK_URL) dart-sdk

# Cleaning
rm -rf $WDIR
